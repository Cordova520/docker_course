{"ast":null,"code":"var _jsxFileName = \"/home/cordova520/Documents/Udemy/docker_course/building_multi_container_applications/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GoalInput from \"./components/goals/GoalInput\";\nimport CourseGoals from './components/goals/CourseGoals';\nimport ErrorAlert from './components/UI/ErrorAlert';\nimport { text } from 'body-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loadedGoals, setLoadedGoals] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(function () {\n    async function fetchData() {\n      setIsloading(true);\n      try {\n        const response = await fetch('http://localhost/goals');\n        const resData = await response.json();\n        if (!response.ok) {\n          throw new Error(resData.message || 'Fetching the goals failed.');\n        }\n        setLoadedGoals(resData.goals);\n      } catch (err) {\n        setError(err.message || 'Fetching goals failed - the server responded with an error.');\n      }\n      setIsloading(false);\n    }\n    fetchData();\n  }, []);\n  async function addGoalHandler(goalText) {\n    setIsloading(true);\n    try {\n      const response = await fetch('http://localhost/goals', {\n        method: 'POST',\n        body: JSON.stringify({\n          text: goalText\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await response.json();\n      if (!response.ok) {\n        throw new Error(resData.message || 'Adding the goal failed.');\n      }\n      setLoadedGoals(prevGoals => {\n        const updatedGoals = [{\n          id: resData.goal.id,\n          text: goalText\n        }, ...prevGoals];\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(err.message || 'Adding a goal failed -  the server responded with an error.');\n    }\n    setIsloading(false);\n  }\n  async function deleteGoalHandler(goalId) {\n    setIsloading(true);\n    try {\n      const response = await fetch('http://localhost/goals/' + goalId, {\n        method: 'DELETE'\n      });\n      const resData = await response.json();\n      if (!response.ok) {\n        throw new Error(resData.message || 'Deleting the goal failed');\n      }\n      setLoadedGoals(prevGoals => {\n        const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n        return updatedGoals;\n      });\n    } catch (err) {\n      setError(err.message || 'Deleting the goal failed - the server responsed with an error.');\n    }\n    setIsloading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      errorText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(GoalInput, {\n      onAddGoal: addGoalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(CourseGoals, {\n      goals: loadedGoals,\n      onDeleteGoal: deleteGoalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"CE3G8kZhpbCgiwJWzs7JGXGyTds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GoalInput","CourseGoals","ErrorAlert","text","jsxDEV","_jsxDEV","App","_s","loadedGoals","setLoadedGoals","isLoading","setIsloading","error","setError","fetchData","response","fetch","resData","json","ok","Error","message","goals","err","addGoalHandler","goalText","method","body","JSON","stringify","headers","prevGoals","updatedGoals","id","goal","deleteGoalHandler","goalId","filter","children","errorText","fileName","_jsxFileName","lineNumber","columnNumber","onAddGoal","onDeleteGoal","_c","$RefreshReg$"],"sources":["/home/cordova520/Documents/Udemy/docker_course/building_multi_container_applications/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport GoalInput from \"./components/goals/GoalInput\";\nimport CourseGoals from './components/goals/CourseGoals';\nimport ErrorAlert from './components/UI/ErrorAlert';\nimport { text } from 'body-parser';\n\nfunction App(){\n    const [loadedGoals, setLoadedGoals] = useState([]);\n    const [isLoading, setIsloading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(function () {\n        async function fetchData() {\n            setIsloading(true);\n\n            try{\n                const response = await fetch('http://localhost/goals');\n\n                const resData = await response.json();\n\n                if(!response.ok){\n                    throw new Error(resData.message || 'Fetching the goals failed.');\n                }\n\n                setLoadedGoals(resData.goals);\n            }catch(err){\n                setError(\n                    err.message || 'Fetching goals failed - the server responded with an error.'\n                );\n            }\n            setIsloading(false);\n        }\n\n        fetchData();\n    }, []);\n\n    async function addGoalHandler(goalText){\n        setIsloading(true);\n\n        try {\n            const response = await fetch('http://localhost/goals', {\n                method: 'POST',\n                body: JSON.stringify({\n                    text: goalText,\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            const resData =  await response.json();\n\n            if (!response.ok) {\n                throw new Error(resData.message || 'Adding the goal failed.');\n            }\n\n            setLoadedGoals((prevGoals) => {\n                const updatedGoals = [\n                    {\n                        id: resData.goal.id,\n                        text: goalText,\n                    },\n                    ...prevGoals,\n                ];\n                return updatedGoals;\n            });\n        } catch (err) {\n            setError(\n                err.message || \n                    'Adding a goal failed -  the server responded with an error.'\n            );\n        }\n        setIsloading(false);\n    }\n\n    async function deleteGoalHandler(goalId){\n        setIsloading(true);\n\n        try {\n            const response = await fetch('http://localhost/goals/' + goalId, {\n                method: 'DELETE',\n            });\n\n            const resData = await response.json();\n\n            if (!response.ok) {\n                throw new Error(resData.message || 'Deleting the goal failed');\n            }\n\n            setLoadedGoals((prevGoals) => {\n                const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\n                return updatedGoals;\n            });\n        } catch (err) {\n            setError(\n                err.message ||\n                    'Deleting the goal failed - the server responsed with an error.'\n            );    \n        }\n        setIsloading(false);\n    }\n\n    return (\n        <div>\n            {error && <ErrorAlert errorText={error}/>}\n            <GoalInput onAddGoal={addGoalHandler}/>\n            {!isLoading && (\n                <CourseGoals goals={loadedGoals} onDeleteGoal={deleteGoalHandler}/>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}